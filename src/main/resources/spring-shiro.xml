<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<bean id="dynamicUrlFiler" class="com.yx.support.shiro.DynamicUrlFilter">
		<property name="unauthorizedUrl" value="/error/unauthorized.html" />
		<property name="userService" ref="userService" />
		<property name="successUrl" value="/admin/home.shtml" />
		<property name="uninterceptUrls">
          <list>
			  <value>/chat.shtml</value>
		  </list>
		</property>
	</bean>
	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- override these for application-specific URLs if you like: <property 
			name="loginUrl" value="/login.jsp"/> <property name="successUrl" value="/home.jsp"/> 
			<property name="unauthorizedUrl" value="/unauthorized.jsp"/> -->
		<property name="loginUrl" value="/u/login.shtml" />
		<property name="successUrl" value="/admin/home.shtml" />
		<!-- The 'filters' property is not necessary since any declared javax.servlet.Filter 
			bean -->
		<!-- defined will be automatically acquired and available via its beanName 
			in chain -->
		<!-- definitions, but you can perform instance overrides or name aliases 
			here if you like: -->
		<!-- <property name="filters"> <util:map> <entry key="anAlias" value-ref="someFilter"/> 
			</util:map> </property> -->
		<property name="filters">
			<util:map>
				<entry key="du" value-ref="dynamicUrlFiler" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
			    /index.jsp = anon
				/common/** = anon
				/freemarker/** = anon
				/u/** = anon
				/service/** = anon
				/processEditor/** = anon
				/admin/logout.shtml = logout
				/** = user,du
				/ = anon
			</value>
		</property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property 
			instead. -->
		<property name="realm" ref="oaRealm" />
		<property name="cacheManager" ref="cacheManager" />
		<property name="sessionManager" ref="sessionManager"/>  
		<!-- By default the servlet container sessions will be used. Uncomment 
			this line to use shiro's native sessions (see the JavaDoc for more): -->
		<!-- <property name="sessionMode" value="native"/> -->
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- Define the Shiro Realm implementation you want to use to connect to 
		your back-end -->
	<!-- security datasource: -->
	<bean id="oaRealm" class="com.yx.support.shiro.UserRealm">
		<property name="us" ref="userService" />
		<property name="ph" ref="passwordHelper" />
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="true" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid"/>
		<property name="httpOnly" value="true"/>
		<property name="maxAge" value="180000"/>
	</bean>
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<bean id="passwordHelper" class="com.yx.support.shiro.PasswordHelper">
		<property name="algorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="salt" value="yangxin" />
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.yx.support.shiro.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>
</beans>        